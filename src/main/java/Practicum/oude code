     String[] Achternamen = new String[3] ;
        int[] leeftijd = {12,54,23,65,32,76,78,4};
        Scanner scn = new Scanner(System.in);

        System.out.println("Nieuwe klanten toevoegen? y/n");
        String nieuweKlanten = scn.nextLine();
        if (nieuweKlanten.equals("y")) {

            for (int i = 0; i < Achternamen.length; i++){
                System.out.println("Voer achternaam in");
                Achternamen[i] = scn.nextLine();

        }

        }

        System.out.println("Wilt u zoeken via de linear search methode? y/n");
        String linearZoeker = scn.nextLine();

        if (linearZoeker.equals("y")) {

            System.out.println("Zoek op achternaam");
            String zoekTerm;
            zoekTerm = scn.next();
            System.out.println("search(achternamen): " + linearSearch(Achternamen, zoekTerm));
        } else {
            sort(leeftijd);
            //System.out.println("Dan niet...");
        }

        System.out.println("Wilt u leeftijden sorteren via merge sort? y/n");
#######################################################################################################################


 public boolean remove(int value) {
        Node focusNode = root;
        Node parent = root;

        boolean isItALeftChild = true;
        while (focusNode.value != value){

            parent = focusNode;

            if (value < focusNode.value){

                isItALeftChild = true;

                focusNode = focusNode.left;
            } else {

                isItALeftChild = false;
                focusNode = focusNode.right;
            }

            if (focusNode == null){
                return false;
            }
        }

        if (focusNode.left == null && focusNode.right == null){

            if(focusNode == root){

                root = null;

            } else if (isItALeftChild){

                parent.left = null;

            } else {

                parent.right = null;
            }

        }

        else if (focusNode.right == null){

            if (focusNode == root){
                root = focusNode.left;
            } else if (isItALeftChild){
                parent.left = focusNode.left;
            } else { parent.right = focusNode.left;
        }

         else if(focusNode.left == null){

            }
    }